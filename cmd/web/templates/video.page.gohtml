{{template "base" .}}

{{define "title"}}
    Virtual Terminal
{{end}}

{{define "content"}}
    <h2 class="mt-3 text-center">m3u8 Video</h2>

    <video id="videoPlayer0" controls width="1280" height="720"></video>
    <hr>

    <video id="videoPlayer1" controls width="1280" height="720"></video>
    <hr>

    <video id="videoPlayer2" controls width="1280" height="720"></video>
    <hr>

    <video id="videoPlayer3" controls width="1280" height="720"></video>
    <hr>



{{end}}

{{define "js"}}

    <script src="https://cdn.jsdelivr.net/npm/hls.js@1"></script>
    <script>
    // 你的m3u8檔案名稱的陣列
    var m3u8Files = ['/Media/Ch0/2024/01/28/15/30/20240128153000646',
                     '/Media/Ch0/2024/01/28/15/35/20240128153500675',
                     '/Media/Ch0/2024/01/28/15/40/20240128154000623',
                     '/Media/Ch0/2024/01/28/15/45/20240128154500621',];

    for (var i = 0; i < m3u8Files.length; i++) {
        // 建立影片元素
        var video = document.getElementById("videoPlayer" + i.toString());
        video.controls = true;
        video.poster = 'http://localhost:3500' + m3u8Files[i] + '.jpg'; // 設定縮圖


        // 使用hls.js來播放m3u8檔案
        if(Hls.isSupported()) {
            var hls = new Hls();
            hls.loadSource('http://localhost:3500' + m3u8Files[i] + '.m3u8');
            hls.attachMedia(video);
            hls.startLoad(10000);

        }
        // HLS.js is not supported on platforms that do not have Media Source
        // Extensions (MSE) enabled.
        //
        // When the browser has built-in HLS support (check using `canPlayType`),
        // we can provide an HLS manifest (i.e. .m3u8 URL) directly to the video
        // element through the `src` property. This is using the built-in support
        // of the plain video element, without using HLS.js.
        else if (video.canPlayType('application/vnd.apple.mpegurl')) {
            video.src = videoSrc;
        }else {
            console.error('HLS 不被支持，請更換支援 HLS 的瀏覽器。');
        }
    }
    </script>



{{end}}